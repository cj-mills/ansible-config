---

# tasks to complete before running roles
- hosts: localhost
  connection: local
  # enable sudo
  become: true
  pre_tasks:
    - name: pre-run | update package cache (debian, etc)
      tags: always
      apt: update_cache=yes
      when: ansible_distribution in ["Debian", "Ubuntu"]
      
  tasks:
  - name: Install packages
    # Use the package module ot install packages
    package:
      name:
        - wget
        - gpg
        - git
        - htop
        - curl
        - apt-transport-https
        
  - name: install key (apt)
    vars_files:
      - vars.yml
    become: yes
    apt_key:
      url: '{{ visual_studio_code_mirror }}/keys/microsoft.asc'
      state: present

  - name: install VS Code repo (apt)
    vars_files:
      - vars.yml
    become: yes
    apt_repository:
      repo: 'deb [arch=amd64{{ visual_studio_code_gpgcheck | ternary("", " trusted=yes") }}] {{ visual_studio_code_mirror }}/repos/code stable main'
      filename: vscode
      state: present
    when: not visual_studio_code_skip_add_repo

  - name: install VS Code (apt)
    vars_files:
      - vars.yml
    become: yes
    apt:
      name: "{{ visual_studio_code_package }}{{ (visual_studio_code_version | length > 0) | ternary('=' + visual_studio_code_version, '') }}"
      state: present
      
  
# - name: Setup miniconda3
#   become: no
#   user: "{{ user }}"
#   vars_files:
#     - vars.yml
  
#   tasks:
#     # Download the latest installer file if it does not already exist
#     - name: Download miniconda3 installer
#       get_url: 
#         url: https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
#         dest: "{{ downloads_dir }}/Miniconda3-latest-Linux-x86_64.sh"
    
#     # Run the installer if Miniconda is not already installed
#     - name: Install miniconda3
#       command: "/bin/bash {{ downloads_dir }}/Miniconda3-latest-Linux-x86_64.sh -b"
#       args:
#       	creates: "{{ home }}"miniconda3"
        
  
